TITLE   ASSEMBLY LANGUAGE DEFINITION FILE FOR MIPS-like uP
WORD    32
WIDTH   92
LINES   70
;**********************************************************************
; INSTRUCTION OPCODE LABELS - MUST BE 6-BITS
;**********************************************************************
aluOp:      EQU     B#000000
addiOp:	    EQU     B#000001
lwOp:       EQU     B#000010
swOp:       EQU     B#000011
beqOp:      EQU     B#000100
jOp:        EQU     B#000101
;**********************************************************************
; ALU FUNCTION LABELS - MUST BE 3-BITS
;**********************************************************************
addFxn:     EQU     B#000
subFxn:     EQU     B#001
sltFxn:     EQU     B#010
;**********************************************************************
; REGISTER LABELS - MUST BE 5-BITS
;**********************************************************************
r0:          EQU     B#00000
r1:          EQU     B#00001
r2:          EQU     B#00010
r3:          EQU     B#00011
r4:          EQU     B#00100
r5:          EQU     B#00101
r6:          EQU     B#00110
r7:          EQU     B#00111
r8:          EQU     B#01000
r9:          EQU     B#01001
r10:         EQU     B#01010
r11:         EQU     B#01011
r12:         EQU     B#01100
r13:         EQU     B#01101
r14:         EQU     B#01110
r15:         EQU     B#01111
r16:         EQU     B#10000
r17:         EQU     B#10001
r18:         EQU     B#10010
r19:         EQU     B#10011
r20:         EQU     B#10100
r21:         EQU     B#10101
r22:         EQU     B#10110
r23:         EQU     B#10111
r24:         EQU     B#11000
r25:         EQU     B#11001
r26:         EQU     B#11010
r27:         EQU     B#11011
r28:         EQU     B#11100
r29:         EQU     B#11101
r30:         EQU     B#11110
r31:         EQU     B#11111
;**********************************************************************
; DATA PSEUDO OPS
;**********************************************************************
DW:         DEF     32VH#00000000   ; 32-BIT DATA DIRECTIVE (HEXADECIMAL)
;**********************************************************************
; ASSEMBLY LANGUAGE INSTRUCTIONS
;**********************************************************************
add:    DEF     aluOp,5VB#00000,5VB#00000,5VB#00000,B#00000000,addFxn
sub:    DEF     aluOp,5VB#00000,5VB#00000,5VB#00000,B#00000000,subFxn
slt:    DEF     aluOp,5VB#00000,5VB#00000,5VB#00000,B#00000000,sltFxn
addi:	DEF	addiOp,5VB#00000,5VB#00000,16VB#0000000000000000
lw:     DEF     lwOp,5VB#00000,5VB#00000,16VB#0000000000000000
sw:     DEF     swOp,5VB#00000,5VB#00000,16VB#0000000000000000
beq:    DEF     beqOp,5VB#00000,5VB#00000,16VB#0000000000000000
j:      DEF     jOp,26VB#00000000000000000000000000
;**********************************************************************
; DIRECCIONES IMPORTANTES EN MEMORIA
;**********************************************************************
decode0:	EQU	B#0110000000000000
decode1:	EQU	B#0110000000000001
decode2:	EQU	B#0110000000000010
decode3:	EQU	B#0110000000000011
decode5:	EQU	B#0110000000000101
keyboard:	EQU	B#0110000000000110
n0:		EQU	B#0000000000000000
n1:		EQU	B#0000000000000001
n2:		EQU	B#0000000000000010
n2048:		EQU	B#0000010000000000
END